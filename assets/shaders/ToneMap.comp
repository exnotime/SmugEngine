#version 430
layout(rgba8, binding = 0) writeonly restrict uniform image2D output_img;

layout(binding = 0) uniform sampler2D InputTex;

layout(binding = 1) uniform ToneMapUniformData {
	float Bright;
	float Exposure;
};

vec3 Uncharted2Tonemap(vec3 x)
{
    float A = 0.15;
	float B = 0.50;
	float C = 0.10;
	float D = 0.20;
	float E = 0.02;
	float F = 0.30;

    return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;
}

#define WORK_GROUP_SIZE 32
layout(local_size_x = WORK_GROUP_SIZE, local_size_y = WORK_GROUP_SIZE) in;

void main(){
	ivec2 screenPos = ivec2(gl_GlobalInvocationID.xy);
	vec4 outColor = texelFetch(InputTex, screenPos, 0);
	float Y = dot(vec4(0.30, 0.59, 0.11, 0.0), outColor);
    float YD = Exposure * (Exposure / Bright + 1.0) / (Exposure + 1.0);
	imageStore(output_img, screenPos, outColor * YD);
}